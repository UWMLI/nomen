// Generated by CoffeeScript 1.8.0
(function() {
  'use strict';
  var getAllFiles, getJSONList, getSubdirs, resolveURI, toArray,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  toArray = function(list) {
    return Array.prototype.slice.call(list || [], 0);
  };

  resolveURI = function(base, url) {
    if (url.match(/^[A-Za-z]+:\/\//)) {
      return url;
    } else if (base.match(/\/$/)) {
      return "" + base + url;
    } else if (__indexOf.call(base, '/') >= 0) {
      return "" + base.slice(0, +base.lastIndexOf('/') + 1 || 9e9) + url;
    } else {
      return url;
    }
  };

  getJSONList = function(json, success, failure) {
    var dir, slashIndex;
    slashIndex = json.lastIndexOf('/');
    dir = slashIndex === -1 ? '' : json.slice(0, +slashIndex + 1 || 9e9);
    $.getJSON(json, function(urls) {
      var fixedURLs, url;
      fixedURLs = (function() {
        var _i, _len, _results;
        _results = [];
        for (_i = 0, _len = urls.length; _i < _len; _i++) {
          url = urls[_i];
          if (url.match(/^https?:\/\//) != null) {
            _results.push(url);
          } else {
            _results.push("" + dir + url);
          }
        }
        return _results;
      })();
      success(fixedURLs);
    }).fail(failure);
  };

  getSubdirs = function(dirReader, callback) {
    var getSome, subdirs;
    subdirs = [];
    getSome = function() {
      dirReader.readEntries(function(results) {
        var newSubdirs, res;
        if (results.length === 0) {
          callback(subdirs);
        } else {
          newSubdirs = (function() {
            var _i, _len, _ref, _results;
            _ref = toArray(results);
            _results = [];
            for (_i = 0, _len = _ref.length; _i < _len; _i++) {
              res = _ref[_i];
              if (res.isDirectory) {
                _results.push(res);
              }
            }
            return _results;
          })();
          subdirs = subdirs.concat(newSubdirs);
          getSome();
        }
      });
    };
    getSome();
  };

  getAllFiles = function(dirReader, callback) {
    var files, getSome, readers;
    files = [];
    readers = [];
    getSome = function() {
      dirReader.readEntries(function(results) {
        var file, _i, _len, _ref;
        if (results.length === 0) {
          if (readers.length === 0) {
            callback(files);
          } else {
            dirReader = readers.pop();
            getSome();
          }
        } else {
          _ref = toArray(results);
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            file = _ref[_i];
            if (file.isFile) {
              files.push(file);
            } else if (file.isDirectory) {
              readers.push(file.createReader());
            }
          }
          getSome();
        }
      });
    };
    getSome();
  };

  window.resolveURI = resolveURI;

  window.getJSONList = getJSONList;

  window.getSubdirs = getSubdirs;

  window.getAllFiles = getAllFiles;

}).call(this);
